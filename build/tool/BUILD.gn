
toolchain("gcc") {
  tool("cc") {
    # output指向当前的输出文件
    depfile = "{{output}}.d"
    command = "gcc -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
    description = "CC {{output}}"
    depsformat = "gcc"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}_{{source_name_part}}.o"
    ]
  }

   tool("cxx") {
    # output指向当前的输出文件
    depfile = "{{output}}.d"
    command = "g++ -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    description = "CXX {{output}}"
    depsformat = "gcc"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}_{{source_name_part}}.o"
    ]
  }

  tool("alink") {
    outfile = "{{target_out_dir}}/{{target_output_name}}{{output_extension}}"
    command = "python " + rebase_path("//build/script/gen_static_library.py", root_out_dir) + " --ar ar -o $outfile --args rcs {{inputs}}"
    description = "ALINK {{label}}"
    default_output_extension = ".a"
    output_prefix = "lib"
    outputs = [
      outfile,
    ]
  }

  tool("solink") {
    # 生成动态库的工具
    sofile = "{{target_out_dir}}/{{target_output_name}}{{output_extension}}"
    rspfile = "$sofile.rsp"
    rspfile_content = "{{inputs}}"
    command = "gcc -shared {{ldflags}} -o $sofile @$rspfile"
    description = "SOLINK {{label}}"
    output_prefix = "lib"
    default_output_extension = ".dll"
    outputs = [
      sofile,
    ]
    link_output = sofile
    depend_output = sofile
    runtime_link_output = sofile
  }

  tool("link") {
    outfile = "{{target_out_dir}}/{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    rspfile_content = "{{inputs}}"
    command = "g++ {{ldflags}} -o $outfile -Wl,--start-group @$rspfile -Wl,--end-group {{libs}}"
    description = "LINK {{label}}"
    default_output_dir = "{{root_out_dir}}"
    if (target_os == "win") {
      default_output_extension = ".exe"
    }
    outputs = [
      outfile,
    ]
  }

  tool("copy") {
    command = "cp -f {{source}} {{output}}"
    description = "COPY {{label}}"
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }
}
